/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -m -p nm-device-olpc-meshinterface /home/ilia/libQtNetworkManager/solid/networkmanager-0.7/dbus/introspection/nm-device-olpc-mesh.xml
 *
 * qdbusxml2cpp is Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef NM_DEVICE_OLPC_MESHINTERFACE_H
#define NM_DEVICE_OLPC_MESHINTERFACE_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface org.freedesktop.NetworkManager.Device.OlpcMesh
 */
class OrgFreedesktopNetworkManagerDeviceOlpcMeshInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.freedesktop.NetworkManager.Device.OlpcMesh"; }

public:
    OrgFreedesktopNetworkManagerDeviceOlpcMeshInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~OrgFreedesktopNetworkManagerDeviceOlpcMeshInterface();

    Q_PROPERTY(uint ActiveChannel READ activeChannel)
    inline uint activeChannel() const
    { return qvariant_cast< uint >(property("ActiveChannel")); }

    Q_PROPERTY(QDBusObjectPath Companion READ companion)
    inline QDBusObjectPath companion() const
    { return qvariant_cast< QDBusObjectPath >(property("Companion")); }

    Q_PROPERTY(QString HwAddress READ hwAddress)
    inline QString hwAddress() const
    { return qvariant_cast< QString >(property("HwAddress")); }

public Q_SLOTS: // METHODS
Q_SIGNALS: // SIGNALS
    void PropertiesChanged(const QVariantMap &properties);
};

namespace org {
  namespace freedesktop {
    namespace NetworkManager {
      namespace Device {
        typedef ::OrgFreedesktopNetworkManagerDeviceOlpcMeshInterface OlpcMesh;
      }
    }
  }
}
#endif
